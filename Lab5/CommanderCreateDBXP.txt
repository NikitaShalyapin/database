SET NAMES CYRL;
create database 'D:\!\43501_4\!DB\my_DB\AUTO_SERVICES_XP.sql' 
user 'SYSDBA' password 'masterkey' 
DEFAULT CHARACTER SET CYRL;

connect 'D:\!\43501_4\!DB\my_DB\AUTO_SERVICES_XP.sql' 
user 'SYSDBA' password 'masterkey'; 
commit;


CREATE TABLE marks
(marks_id INTEGER NOT NULL PRIMARY KEY, mark VARCHAR (16) NOT NULL);
commit;

CREATE TABLE motors
(motors_id INTEGER NOT NULL PRIMARY KEY, motor VARCHAR (16) NOT NULL, type_of_motor VARCHAR (16), volume_motor FLOAT, power FLOAT, torque FLOAT, consumption FLOAT);
commit;

CREATE TABLE complete_set
(complete_set_id INTEGER NOT NULL PRIMARY KEY, equipment VARCHAR (16) NOT NULL);
commit;

CREATE TABLE model_car
(model_car_id INTEGER NOT NULL PRIMARY KEY, model_car VARCHAR (16) NOT NULL, marks_id INTEGER REFERENCES marks(marks_id), 
motors_id INTEGER REFERENCES motors(motors_id), body_type VARCHAR (16), complete_set_id INTEGER REFERENCES complete_set(complete_set_id), 
production_year INTEGER, number_of_seats INTEGER, place_vehicles VARCHAR (16),price FLOAT);
commit;

CREATE TABLE customers
(customers_id INTEGER NOT NULL PRIMARY KEY, customers VARCHAR (100) NOT NULL);
commit;

CREATE TABLE additional_options
(additional_options_id INTEGER NOT NULL PRIMARY KEY, additional_options VARCHAR (16) NOT NULL, price FLOAT);
commit;

CREATE TABLE trade
(trade_id INTEGER NOT NULL PRIMARY KEY, customers_id INTEGER REFERENCES customers(customers_id), 
model_car_id INTEGER REFERENCES model_car(model_car_id), 
discount FLOAT, total_price FLOAT);
commit;

CREATE TABLE service
(service_id INTEGER NOT NULL PRIMARY KEY, model_car_id INTEGER REFERENCES model_car(model_car_id),
type_of_fault VARCHAR (100) , trade_id INTEGER REFERENCES trade(trade_id));
commit;






CREATE GENERATOR gen_marks_id;
SET GENERATOR gen_marks_id TO 0;
set term !! ;
CREATE TRIGGER marks_bi FOR marks 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.marks_id = GEN_ID(gen_marks_id, 1); 
END!!
set term ; !!


CREATE GENERATOR gen_motors_id;
SET GENERATOR gen_motors_id TO 0;
set term !! ;
CREATE TRIGGER motors_bi FOR motors 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.motors_id = GEN_ID(gen_motors_id, 1); 
END!!
set term ; !!



CREATE GENERATOR gen_complete_set_id;
SET GENERATOR gen_complete_set_id TO 0;
set term !! ;
CREATE TRIGGER complete_set_bi FOR complete_set
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.complete_set_id = GEN_ID(gen_complete_set_id, 1); 
END!!
set term ; !!


CREATE GENERATOR gen_model_car_id;
SET GENERATOR gen_model_car_id TO 0;
set term !! ;
CREATE TRIGGER model_car_bi FOR model_car 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.model_car_id = GEN_ID(gen_model_car_id, 1); 
END!!
set term ; !!


CREATE GENERATOR gen_customers_id;
SET GENERATOR gen_customers_id TO 0;
set term !! ;
CREATE TRIGGER customers_bi FOR customers 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.customers_id = GEN_ID(gen_customers_id, 1); 
END!!
set term ; !!


CREATE GENERATOR gen_additional_options_id;
SET GENERATOR gen_additional_options_id TO 0;
set term !! ;
CREATE TRIGGER additional_options_bi FOR additional_options 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.additional_options_id = GEN_ID(gen_additional_options_id, 1); 
END!!
set term ; !!


CREATE GENERATOR gen_trade_id;
SET GENERATOR gen_trade_id TO 0;
set term !! ;
CREATE TRIGGER trade_bi FOR trade 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.trade_id = GEN_ID(gen_trade_id, 1); 
END!!
set term ; !!


CREATE GENERATOR gen_service_id;
SET GENERATOR gen_service_id TO 0;
set term !! ;
CREATE TRIGGER service_bi FOR service 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.service_id = GEN_ID(gen_service_id, 1); 
END!!
set term ; !!





CREATE TABLE transmission
(transmission_id INTEGER NOT NULL PRIMARY KEY, transmission VARCHAR (100) NOT NULL);
commit;

CREATE GENERATOR gen_transmission_id;
SET GENERATOR gen_transmission_id TO 0;
set term !! ;
CREATE TRIGGER transmission_bi FOR transmission 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.transmission_id = GEN_ID(gen_transmission_id, 1); 
END!!
set term ; !!


ALTER TABLE complete_set
ADD motors_id INTEGER REFERENCES motors(motors_id);
ALTER TABLE complete_set
ADD transmission_id INTEGER REFERENCES transmission(transmission_id);
ALTER TABLE complete_set
ADD additional_options_id INTEGER REFERENCES additional_options(additional_options_id);












CREATE TABLE trade_additional_options
(trade_additional_options_id INTEGER NOT NULL PRIMARY KEY, 
additional_options_id INTEGER REFERENCES additional_options(additional_options_id),
trade_id INTEGER REFERENCES trade(trade_id),price FLOAT) ;
commit;

CREATE GENERATOR gen_trade_additional_options_id;
SET GENERATOR gen_trade_additional_options_id TO 0;
set term !! ;
CREATE TRIGGER trade_additional_options_bi FOR trade_additional_options 
ACTIVE BEFORE INSERT POSITION 0 
AS
BEGIN
NEW.trade_additional_options_id = GEN_ID(gen_trade_additional_options_id, 1); 
END!!
set term ; !!
commit;